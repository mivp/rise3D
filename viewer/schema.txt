rise3d viewer data schema notes and definitions
-----------------------------------------------

[viewer/scene_data.json] : contains a list of all external files with visual elements, i.e. just about everything to view

EXAMPLE:

{
    "elements" : [                                                              // root element, array of scene elements
        {
            "type" : "tileset",                                                 // "tileset": Cesium 3D Tiles format, "geometry": manually defined geometry, "file": external file, e.g. a mesh
            "datatype" : "points",                                              // "points", "mesh", "shapes", "kml", "orthophoto", "sites" others to follow..
            "enabled" : true,                                                   // if this is false, the asset will not be loaded
            "path" : "/Assets/points/sample/tileset.json",                      // path within web server hierarchy pointing to file to load
            "name" : "sample_points",                                           // internal identifier (unique) for finding this object and connecting data to it
            "caption" : "Sample region",                                        // optional - title or caption to show anywhere the name is displayed
            "caption_offset" : [0, 0, 0]                                        // optional - offset vector in metres for hover captions in the 3D world
            "layers" : [
                "layername",                                                    // optional - assign this element to a view layer, for quick access/toggle/manipulation etc.
                "layer2name",                                                   //            if no layer is specified, then a unique layer with the name of the element will be created
            ],
            "tags" : [
                "tagname",                                                      // optional (but highly recommended) - a set of tags to describe this data, used for
                                                                                //            search, ID, layer visibility, etc.
            ]
        },
        {
            "type": "geometry",
            "datatype" : "shapes",
            "path" : "/Assets/shapes/building_shapes.json",
            "name" : "buildings_data"
        },
        {
            "type" : "geometry",
            "datatype" : "polylines",
            "path" : "/Assets/polylines/lines.json",
            "name" : "test_lines",
            "default_colour" : [255, 255, 255, 255],                            // RGBA default colour
            "default_width" : 10                                                // default line width
        },
        {
            "type" : "geometry",
            "datatype" : "markers",
            "path" : "/Assets/markers/markers.json",
            "name" : "test_markers"
        }
        {
            "type": "file",
            "datatype" : "mesh",
            "path" : "/Assets/meshes/test_mesh.glb",                            // must be in gltf/glb format
            "name" : "testmesh",
            "showDefault" : "true",                                             // visible by default - false to hide on load
            "position" : {
                "x" : 800000.0,                                                 // currently in UTM50S, but will be flexible later
                "y" : 9500000.0
            },
            "transform" : {                                                     // position/scale/rotation *after* current geo system applied
                "translation" : {
                    "x" : 0,
                    "y" : 0,
                    "z" : 0
                },
                "orientation" : {
                    "x" : 0,                                                    // pitch in degrees
                    "y" : 0,                                                    // yaw in degrees
                    "z" : 0                                                     // roll in degrees
                },
                "scale" : {
                    "x" : 0,                                                    // non-uniform scale of mesh, 1.0 is unscaled
                    "y" : 0,
                    "z" : 0
                }
            }
        },
        // MAYBE sites data should go to data_catalog instead.. TBD
        {
            "type" : "file",
            "datatype" : "sites",
            "path" : "/Assets/geo/test_sites.json",
            "name" : "TestRegion"
        }

    ]
}

[data_catalog.json] : contains references to all external data sources
{
    "dataSources" : [
        {
            "name" : "",
            "datatype" : "",
            "path" : "/Assets/data/sample_data.json",
            "tags" : [
                "tagname",
            ],
            "availability" : "locked"                                           // available - data can be accessed without impediment
                                                                                // unavailable - data is missing
                                                                                // locked - data is not accessible, regardless of presence
                                                                                // placeholder - unconfirmed data source
        }
    ]
}

[data_groups.json] : defines categories of data and associated tags
{
    "datagroups" : [                                                            // these groups will appear in the 'info layers' panel
        {
            "name" : "Group name",
            "tags" : [
                "tagname",
            ]
        }
    ],
    "spatial_layers" : [
        {
            "name" : "Layer name",
            "tags" : [
                "tagname",
            ]
        }
    ]
}

Spatial layer tags:

    - pointcloud :      Point clouds representing spatial data
    - pointcloud_mesh : Meshed versions of point clouds
    - orthophoto :      Orthophotos of spatial regions, terrain etc.
    - shape :           Shape files representing buildings etc.
    - mesh_spatial :    3D meshes that represent props, landmarks, etc. but are not considered design elements

external file support:

    - "type" must be set to "file", then "datatype" can be:
        - kml
        - mesh (gltf format)
        - orthophoto (directory structure)
        - sites (json list of site descriptions)
        - more to come..

KMZ files may need to be extracted (ZIP format) and loaded as KML due to cross-origin issues with the ZIP inflater
